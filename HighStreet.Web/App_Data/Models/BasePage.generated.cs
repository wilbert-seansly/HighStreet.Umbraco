//------------------------------------------------------------------------------
// <auto-generated>
//   This code was generated by a tool.
//
//    Umbraco.ModelsBuilder v3.0.10.102
//
//   Changes to this file will be lost if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Linq.Expressions;
using System.Web;
using Umbraco.Core.Models;
using Umbraco.Core.Models.PublishedContent;
using Umbraco.Web;
using Umbraco.ModelsBuilder;
using Umbraco.ModelsBuilder.Umbraco;

namespace Umbraco.Web.PublishedContentModels
{
	// Mixin content Type 1135 with alias "basePage"
	/// <summary>Base Page</summary>
	public partial interface IBasePage : IPublishedContent
	{
		/// <summary>Metadata Description</summary>
		string MetadataDescription { get; }

		/// <summary>SEO Title</summary>
		string SEotitle { get; }

		/// <summary>Title</summary>
		string Test { get; }

		/// <summary>Theme</summary>
		IPublishedContent Theme { get; }
	}

	/// <summary>Base Page</summary>
	[PublishedContentModel("basePage")]
	public partial class BasePage : PublishedContentModel, IBasePage
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "basePage";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public BasePage(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<BasePage, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Metadata Description
		///</summary>
		[ImplementPropertyType("metadataDescription")]
		public string MetadataDescription
		{
			get { return GetMetadataDescription(this); }
		}

		/// <summary>Static getter for Metadata Description</summary>
		public static string GetMetadataDescription(IBasePage that) { return that.GetPropertyValue<string>("metadataDescription"); }

		///<summary>
		/// SEO Title
		///</summary>
		[ImplementPropertyType("sEOTitle")]
		public string SEotitle
		{
			get { return GetSEotitle(this); }
		}

		/// <summary>Static getter for SEO Title</summary>
		public static string GetSEotitle(IBasePage that) { return that.GetPropertyValue<string>("sEOTitle"); }

		///<summary>
		/// Title
		///</summary>
		[ImplementPropertyType("test")]
		public string Test
		{
			get { return GetTest(this); }
		}

		/// <summary>Static getter for Title</summary>
		public static string GetTest(IBasePage that) { return that.GetPropertyValue<string>("test"); }

		///<summary>
		/// Theme
		///</summary>
		[ImplementPropertyType("theme")]
		public IPublishedContent Theme
		{
			get { return GetTheme(this); }
		}

		/// <summary>Static getter for Theme</summary>
		public static IPublishedContent GetTheme(IBasePage that) { return that.GetPropertyValue<IPublishedContent>("theme"); }
	}
}
